function solve(s) {
  // Assign values to all letters ie a-z from 1-26
  const letterValues = {};
  for (let i = 97; i <= 122; i++) {
    letterValues[String.fromCharCode(i)] = i - 96;
  }

  // Initialize vowels and consonants
  const vowels = "aeiou";
  let consonants = [];  // Change const to let

  // Iterate through all letters in s
  let maxValue = 0;
  for (let i = 0; i < s.length; i++) {
    // If the current letter is a consonant, add it to the consonants array
    if (!vowels.includes(s[i])) {
      consonants.push(s[i]);
      const substringValue = consonants.reduce((a, b) => a + letterValues[b], 0);  // Calculate substring value
      maxValue = Math.max(maxValue, substringValue);
    } else {
      // If the current letter is a vowel, reset the consonants array
      consonants = [];
    }
  }

  // Return the highest value of any of the substrings
  return maxValue;
}
//
def solve(s):
    # Assign values to all letters from a to z
    letter_values = {chr(i): i - 96 for i in range(97, 123)}

    # Initialize vowels and consonants
    vowels = "aeiou"
    consonants = []

    # Initialize maximum value
    max_value = 0

    # Iterate through all letters in s
    for char in s:
        # If the current letter is a consonant, add it to the consonants list
        if char not in vowels:
            consonants.append(char)
            # Calculate substring value
            substring_value = sum(letter_values[c] for c in consonants)
            # Update maximum value
            max_value = max(max_value, substring_value)
        else:
            # If the current letter is a vowel, reset the consonants list
            consonants = []

    # Return the highest value of any of the substrings
    return max_value
