function logisticMap(width, height, xList, yList) {
  const result = new Array(height).fill(null).map(() => new Array(width).fill(null));
  
  if (xList.length === 0 && yList.length === 0) {
    return result;
  }
  for (let i = 0; i < height; i++) {
    for (let j = 0; j < width; j++) {
      result[i][j] = Math.min(
        ...xList.map((x, index) => Math.abs(i - yList[index]) + Math.abs(j - x))
      );
    }
  }
  return result;
}
//
def logistic_map(width, height, x_list, y_list):
    result = [[None for _ in range(width)] for _ in range(height)]

    if not x_list and not y_list:
        return result

    for i in range(height):
        for j in range(width):
            result[i][j] = min(
                [abs(i - y) + abs(j - x) for x, y in zip(x_list, y_list)]
            )

    return result

